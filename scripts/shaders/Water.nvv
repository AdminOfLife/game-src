; Water Shd
;
; v0 position for keyframe 0
; v1 normal for keyframe 0
; v2 tex0 coord for keyframe 0
; v3 tex1 coord for keyframe
;
; world-view projection matrix 0-3
; light direction 	       4
; world matrix                 5-8
; transform vector(s)          9
; material color               10
; fog color                    11


vs.1.1




; Transform to clip space
mov r1, v0
mul r0, r1.x, c[0] 
mad r0, r1.y, c[1], r0 
mad r0, r1.z, c[2], r0 
add r3, c[3], r0 


;add the wave to the y of the output vertex
;and place the finished position in oPos
;add r3.y, r3.y, r0.x
mov oPos, r3

; transform normal
mov r2, v1
dp3 r0.x, r2, c[5]
dp3 r0.y, r2, c[6]
dp3 r0.z, r2, c[7]

; renormalize it
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0, r0, r0.w


; Dot normal with light direction in world space
;dp3 r1, r0, -c[4]
;mul r1, r1, c[10] ; modulate against light color
;mul oD0, r1, c[11] ; modulate against material


; set alpha based on the z distance
; to do this first we subtract the near clipping plane from
; the z value
sub r3.z, r3.z, c[12].x

; then scale it
mul r1.w, r3.z, c[12].y

;hopefully r1 is between 1 and 0, so invert it
mov r3.w, r1.w
sub r1.w, c[12].z, r1.w

;ok, so we've got the fog factor stored in r1.w, now we just
;have to use the equation C = f*Ci+(1-f)*Cf
; r3.w contains the value of (1-f), and r1.w contains f
; and Ci is the material color stored in c[10], while
; Cf is stored in c[11]
mov r4, c[10]
mov r5, c[11]
mul r1, r4.xyz, r1.w
mul r3, r5.xyz, r3.w
add r3, r1, r3
mov r3.w, c[9].z
mov oD0, r3

;Transform texture coords
mov r1, v2
add r2, c[9], r1
mov oT0.xy, r2

mov r1, v3
;add r2, c[9], r1
mov oT1.xy, r1



